# contract source code retrieved from eveem.org
# retrieved on 2019-12-03

#  addr = 0x4559DDD9E0a567bD8AB071ac106C1bC2d0C0b6Ef 
#  network = mainnet 
#  ver = 26 Apr 2019 
#  problems = {} 

# storage definitions
def storage:
    # storage address 0
    authorityAddress # mask: a s
    # storage address 1
    owner # mask: a s
    # storage address 2
    unknowne3b5ce76Address # mask: a s
    # storage address 3
    QUOTE_ASSETAddress # mask: a s
    # storage address 4
    unknown94a68630Address # mask: a s
    # storage address 5
    unknown06433b1bAddress # mask: a s
    # storage address 6
    unknowne210c519 # mask: a s
    # storage address 7
    lastUpdate # mask: a s
    # storage address 8
    prices
# hash = 0x06433b1b
# getter = ['storage', 160, 0, 5]
# const = None
# payable = False
def unknown06433b1b(): # not payable
  return unknown06433b1bAddress


# hash = 0x13533b55
# getter = None
# const = None
# payable = False
def unknown13533b55(addr _param1): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _param1
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_param1)]:
      return bool(prices[addr(_param1)])
  if not ext_call.return_data[0]:
      return bool(ext_call.return_data[0])
  return (block.timestamp < lastUpdate + (48 * 24 * 3600))


# hash = 0x13af4035
# getter = None
# const = None
# payable = False
def setOwner(address _newOwner): # not payable
  if caller != this.address:
      if owner != caller:
          if not authorityAddress:
              revert with 0, 'ds-auth-unauthorized'
          require ext_code.size(authorityAddress)
          call authorityAddress.canCall(address caller, address code, bytes4 sig) with:
               gas gas_remaining wei
              args caller, this.address, call.func_hash
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not ext_call.return_data[0]:
              revert with 0, 'ds-auth-unauthorized'
  owner = _newOwner
  log LogSetOwner(address owner=_newOwner)


# hash = 0x1709ed21
# getter = None
# const = ['return', 172800]
# payable = False
const unknown1709ed21 = (48 * 24 * 3600)


# hash = 0x41976e09
# getter = None
# const = None
# payable = False
def getPrice(address _token): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _token
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_token)]:
      require ext_code.size(QUOTE_ASSETAddress)
      call QUOTE_ASSETAddress.decimals() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if not prices[stor3]:
          revert with 0, 'Price is not valid'
      if not 10^ext_call.return_data[0]:
          require prices[stor3]
          if not prices[addr(_token)]:
              revert with 0, 'Price is not valid'
          return 0 / prices[stor3], block.timestamp
      require 10^ext_call.return_data[0]
      if prices[_token] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_token]:
          revert with 0, 'ds-math-mul-overflow'
      require prices[stor3]
      if not prices[addr(_token)]:
          revert with 0, 'Price is not valid'
  else:
      if not ext_call.return_data[0]:
          require ext_code.size(QUOTE_ASSETAddress)
          call QUOTE_ASSETAddress.decimals() with:
               gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[stor3]:
              revert with 0, 'Price is not valid'
          if not 10^ext_call.return_data[0]:
              require prices[stor3]
              if not ext_call.return_data[0]:
                  revert with 0, 'Price is not valid'
              return 0 / prices[stor3], block.timestamp
          require 10^ext_call.return_data[0]
          if prices[_token] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_token]:
              revert with 0, 'ds-math-mul-overflow'
          require prices[stor3]
          if not ext_call.return_data[0]:
              revert with 0, 'Price is not valid'
      else:
          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              if not 10^ext_call.return_data[0]:
                  require prices[stor3]
                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                      revert with 0, 'Price is not valid'
                  return 0 / prices[stor3], block.timestamp
              require 10^ext_call.return_data[0]
              if prices[_token] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_token]:
                  revert with 0, 'ds-math-mul-overflow'
              require prices[stor3]
              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                  revert with 0, 'Price is not valid'
          else:
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args QUOTE_ASSETAddress
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              if not prices[stor3]:
                  if not 10^ext_call.return_data[0]:
                      require prices[stor3]
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      return 0 / prices[stor3], block.timestamp
                  require 10^ext_call.return_data[0]
                  if prices[_token] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_token]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[stor3]
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
              else:
                  if not ext_call.return_data[0]:
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if not ext_call.return_data[0]:
                              revert with 0, 'Price is not valid'
                          return 0 / prices[stor3], block.timestamp
                      require 10^ext_call.return_data[0]
                      if prices[_token] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_token]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                  else:
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          return 0 / prices[stor3], block.timestamp
                      require 10^ext_call.return_data[0]
                      if prices[_token] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_token]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
  return prices[_token] * 10^ext_call.return_data[0] / prices[stor3], block.timestamp


# hash = 0x4c89867f
# getter = ['storage', 256, 0, 7]
# const = None
# payable = False
def unknown4c89867f(): # not payable
  return lastUpdate


# hash = 0x689a4c8f
# getter = None
# const = None
# payable = False
def unknown689a4c8f(addr _param1, addr _param2): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _param1
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_param1)]:
      require ext_code.size(_param2)
      call _param2.decimals() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if not prices[addr(_param2)]:
          return 0
      if not 10^ext_call.return_data[0]:
          if prices[addr(_param2)]:
              return bool(prices[addr(_param1)]), 0 / prices[addr(_param2)], ext_call.return_data[0]
      else:
          if 10^ext_call.return_data[0]:
              if prices[_param1] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param1]:
                  revert with 0, 'ds-math-mul-overflow'
              if prices[addr(_param2)]:
                  return bool(prices[addr(_param1)]), 
                         prices[_param1] * 10^ext_call.return_data[0] / prices[addr(_param2)],
                         ext_call.return_data[0]
  else:
      if not ext_call.return_data[0]:
          require ext_code.size(_param2)
          call _param2.decimals() with:
               gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[addr(_param2)]:
              return 0
          if not 10^ext_call.return_data[0]:
              if prices[addr(_param2)]:
                  return bool(ext_call.return_data[0]), 0 / prices[addr(_param2)], ext_call.return_data[0]
          else:
              if 10^ext_call.return_data[0]:
                  if prices[_param1] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param1]:
                      revert with 0, 'ds-math-mul-overflow'
                  if prices[addr(_param2)]:
                      return bool(ext_call.return_data[0]), 
                             prices[_param1] * 10^ext_call.return_data[0] / prices[addr(_param2)],
                             ext_call.return_data[0]
      else:
          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
              require ext_code.size(_param2)
              call _param2.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_param2)]:
                  return 0
              if not 10^ext_call.return_data[0]:
                  if prices[addr(_param2)]:
                      return block.timestamp < lastUpdate + (48 * 24 * 3600), 0 / prices[addr(_param2)], ext_call.return_data[0]
              else:
                  if 10^ext_call.return_data[0]:
                      if prices[_param1] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param1]:
                          revert with 0, 'ds-math-mul-overflow'
                      if prices[addr(_param2)]:
                          return block.timestamp < lastUpdate + (48 * 24 * 3600), 
                                 prices[_param1] * 10^ext_call.return_data[0] / prices[addr(_param2)],
                                 ext_call.return_data[0]
          else:
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args _param2
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              require ext_code.size(_param2)
              call _param2.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_param2)]:
                  return 0
              if not prices[addr(_param2)]:
                  if not 10^ext_call.return_data[0]:
                      if prices[addr(_param2)]:
                          return bool(prices[addr(_param2)]), 0 / prices[addr(_param2)], ext_call.return_data[0]
                  else:
                      if 10^ext_call.return_data[0]:
                          if prices[_param1] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param1]:
                              revert with 0, 'ds-math-mul-overflow'
                          if prices[addr(_param2)]:
                              return bool(prices[addr(_param2)]), 
                                     prices[_param1] * 10^ext_call.return_data[0] / prices[addr(_param2)],
                                     ext_call.return_data[0]
              else:
                  if not ext_call.return_data[0]:
                      if not 10^ext_call.return_data[0]:
                          if prices[addr(_param2)]:
                              return bool(ext_call.return_data[0]), 0 / prices[addr(_param2)], ext_call.return_data[0]
                      else:
                          if 10^ext_call.return_data[0]:
                              if prices[_param1] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param1]:
                                  revert with 0, 'ds-math-mul-overflow'
                              if prices[addr(_param2)]:
                                  return bool(ext_call.return_data[0]), 
                                         prices[_param1] * 10^ext_call.return_data[0] / prices[addr(_param2)],
                                         ext_call.return_data[0]
                  else:
                      if not 10^ext_call.return_data[0]:
                          if prices[addr(_param2)]:
                              return block.timestamp < lastUpdate + (48 * 24 * 3600), 0 / prices[addr(_param2)], ext_call.return_data[0]
                      else:
                          if 10^ext_call.return_data[0]:
                              if prices[_param1] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param1]:
                                  revert with 0, 'ds-math-mul-overflow'
                              if prices[addr(_param2)]:
                                  return block.timestamp < lastUpdate + (48 * 24 * 3600), 
                                         prices[_param1] * 10^ext_call.return_data[0] / prices[addr(_param2)],
                                         ext_call.return_data[0]
  revert


# hash = 0x7a9e5e4b
# getter = None
# const = None
# payable = False
def setAuthority(address _authority): # not payable
  if caller != this.address:
      if owner != caller:
          if not authorityAddress:
              revert with 0, 'ds-auth-unauthorized'
          require ext_code.size(authorityAddress)
          call authorityAddress.canCall(address caller, address code, bytes4 sig) with:
               gas gas_remaining wei
              args caller, this.address, call.func_hash
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not ext_call.return_data[0]:
              revert with 0, 'ds-auth-unauthorized'
  authorityAddress = _authority_
  log LogSetAuthority(address authority=_authority_)


# hash = 0x7e3bfc2f
# getter = None
# const = None
# payable = False
def unknown7e3bfc2f(uint256 _param1, addr _param2, addr _param3): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _param2
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_param2)]:
      require ext_code.size(_param3)
      call _param3.decimals() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if not prices[addr(_param3)]:
          revert with 0, 'Price is not valid'
      if not 10^ext_call.return_data[0]:
          if prices[addr(_param3)]:
              if not prices[addr(_param2)]:
                  revert with 0, 'Price is not valid'
              require ext_code.size(_param2)
              call _param2.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not 0 / prices[addr(_param3)]:
                  if 10^ext_call.return_data[31 len 1]:
                      return (0 / 10^ext_call.return_data[31 len 1])
              else:
                  if 0 / prices[addr(_param3)]:
                      if _param1 * 0 / prices[addr(_param3)] / 0 / prices[addr(_param3)] != _param1:
                          revert with 0, 'ds-math-mul-overflow'
                      if 10^ext_call.return_data[31 len 1]:
                          return (_param1 * 0 / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
      else:
          if 10^ext_call.return_data[0]:
              if prices[_param2] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param2]:
                  revert with 0, 'ds-math-mul-overflow'
              if prices[addr(_param3)]:
                  if not prices[addr(_param2)]:
                      revert with 0, 'Price is not valid'
                  require ext_code.size(_param2)
                  call _param2.decimals() with:
                       gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                      if 10^ext_call.return_data[31 len 1]:
                          return (0 / 10^ext_call.return_data[31 len 1])
                  else:
                      if prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                          if _param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] != _param1:
                              revert with 0, 'ds-math-mul-overflow'
                          if 10^ext_call.return_data[31 len 1]:
                              return (_param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
  else:
      if not ext_call.return_data[0]:
          require ext_code.size(_param3)
          call _param3.decimals() with:
               gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[addr(_param3)]:
              revert with 0, 'Price is not valid'
          if not 10^ext_call.return_data[0]:
              if prices[addr(_param3)]:
                  if not ext_call.return_data[0]:
                      revert with 0, 'Price is not valid'
                  require ext_code.size(_param2)
                  call _param2.decimals() with:
                       gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not 0 / prices[addr(_param3)]:
                      if 10^ext_call.return_data[31 len 1]:
                          return (0 / 10^ext_call.return_data[31 len 1])
                  else:
                      if 0 / prices[addr(_param3)]:
                          if _param1 * 0 / prices[addr(_param3)] / 0 / prices[addr(_param3)] != _param1:
                              revert with 0, 'ds-math-mul-overflow'
                          if 10^ext_call.return_data[31 len 1]:
                              return (_param1 * 0 / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
          else:
              if 10^ext_call.return_data[0]:
                  if prices[_param2] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param2]:
                      revert with 0, 'ds-math-mul-overflow'
                  if prices[addr(_param3)]:
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                      require ext_code.size(_param2)
                      call _param2.decimals() with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                          if 10^ext_call.return_data[31 len 1]:
                              return (0 / 10^ext_call.return_data[31 len 1])
                      else:
                          if prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                              if _param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] != _param1:
                                  revert with 0, 'ds-math-mul-overflow'
                              if 10^ext_call.return_data[31 len 1]:
                                  return (_param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
      else:
          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
              require ext_code.size(_param3)
              call _param3.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_param3)]:
                  revert with 0, 'Price is not valid'
              if not 10^ext_call.return_data[0]:
                  if prices[addr(_param3)]:
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
                      require ext_code.size(_param2)
                      call _param2.decimals() with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not 0 / prices[addr(_param3)]:
                          if 10^ext_call.return_data[31 len 1]:
                              return (0 / 10^ext_call.return_data[31 len 1])
                      else:
                          if 0 / prices[addr(_param3)]:
                              if _param1 * 0 / prices[addr(_param3)] / 0 / prices[addr(_param3)] != _param1:
                                  revert with 0, 'ds-math-mul-overflow'
                              if 10^ext_call.return_data[31 len 1]:
                                  return (_param1 * 0 / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
              else:
                  if 10^ext_call.return_data[0]:
                      if prices[_param2] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param2]:
                          revert with 0, 'ds-math-mul-overflow'
                      if prices[addr(_param3)]:
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          require ext_code.size(_param2)
                          call _param2.decimals() with:
                               gas gas_remaining wei
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >= 32
                          if not prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                              if 10^ext_call.return_data[31 len 1]:
                                  return (0 / 10^ext_call.return_data[31 len 1])
                          else:
                              if prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                  if _param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] != _param1:
                                      revert with 0, 'ds-math-mul-overflow'
                                  if 10^ext_call.return_data[31 len 1]:
                                      return (_param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
          else:
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args _param3
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              require ext_code.size(_param3)
              call _param3.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_param3)]:
                  revert with 0, 'Price is not valid'
              if not prices[addr(_param3)]:
                  if not 10^ext_call.return_data[0]:
                      if prices[addr(_param3)]:
                          if not prices[addr(_param3)]:
                              revert with 0, 'Price is not valid'
                          require ext_code.size(_param2)
                          call _param2.decimals() with:
                               gas gas_remaining wei
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >= 32
                          if not 0 / prices[addr(_param3)]:
                              if 10^ext_call.return_data[31 len 1]:
                                  return (0 / 10^ext_call.return_data[31 len 1])
                          else:
                              if 0 / prices[addr(_param3)]:
                                  if _param1 * 0 / prices[addr(_param3)] / 0 / prices[addr(_param3)] != _param1:
                                      revert with 0, 'ds-math-mul-overflow'
                                  if 10^ext_call.return_data[31 len 1]:
                                      return (_param1 * 0 / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
                  else:
                      if 10^ext_call.return_data[0]:
                          if prices[_param2] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param2]:
                              revert with 0, 'ds-math-mul-overflow'
                          if prices[addr(_param3)]:
                              if not prices[addr(_param3)]:
                                  revert with 0, 'Price is not valid'
                              require ext_code.size(_param2)
                              call _param2.decimals() with:
                                   gas gas_remaining wei
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              require return_data.size >= 32
                              if not prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                  if 10^ext_call.return_data[31 len 1]:
                                      return (0 / 10^ext_call.return_data[31 len 1])
                              else:
                                  if prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                      if _param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] != _param1:
                                          revert with 0, 'ds-math-mul-overflow'
                                      if 10^ext_call.return_data[31 len 1]:
                                          return (_param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
              else:
                  if not ext_call.return_data[0]:
                      if not 10^ext_call.return_data[0]:
                          if prices[addr(_param3)]:
                              if not ext_call.return_data[0]:
                                  revert with 0, 'Price is not valid'
                              require ext_code.size(_param2)
                              call _param2.decimals() with:
                                   gas gas_remaining wei
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              require return_data.size >= 32
                              if not 0 / prices[addr(_param3)]:
                                  if 10^ext_call.return_data[31 len 1]:
                                      return (0 / 10^ext_call.return_data[31 len 1])
                              else:
                                  if 0 / prices[addr(_param3)]:
                                      if _param1 * 0 / prices[addr(_param3)] / 0 / prices[addr(_param3)] != _param1:
                                          revert with 0, 'ds-math-mul-overflow'
                                      if 10^ext_call.return_data[31 len 1]:
                                          return (_param1 * 0 / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
                      else:
                          if 10^ext_call.return_data[0]:
                              if prices[_param2] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param2]:
                                  revert with 0, 'ds-math-mul-overflow'
                              if prices[addr(_param3)]:
                                  if not ext_call.return_data[0]:
                                      revert with 0, 'Price is not valid'
                                  require ext_code.size(_param2)
                                  call _param2.decimals() with:
                                       gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                                  if not prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                      if 10^ext_call.return_data[31 len 1]:
                                          return (0 / 10^ext_call.return_data[31 len 1])
                                  else:
                                      if prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                          if _param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] != _param1:
                                              revert with 0, 'ds-math-mul-overflow'
                                          if 10^ext_call.return_data[31 len 1]:
                                              return (_param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
                  else:
                      if not 10^ext_call.return_data[0]:
                          if prices[addr(_param3)]:
                              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                  revert with 0, 'Price is not valid'
                              require ext_code.size(_param2)
                              call _param2.decimals() with:
                                   gas gas_remaining wei
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              require return_data.size >= 32
                              if not 0 / prices[addr(_param3)]:
                                  if 10^ext_call.return_data[31 len 1]:
                                      return (0 / 10^ext_call.return_data[31 len 1])
                              else:
                                  if 0 / prices[addr(_param3)]:
                                      if _param1 * 0 / prices[addr(_param3)] / 0 / prices[addr(_param3)] != _param1:
                                          revert with 0, 'ds-math-mul-overflow'
                                      if 10^ext_call.return_data[31 len 1]:
                                          return (_param1 * 0 / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
                      else:
                          if 10^ext_call.return_data[0]:
                              if prices[_param2] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_param2]:
                                  revert with 0, 'ds-math-mul-overflow'
                              if prices[addr(_param3)]:
                                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                      revert with 0, 'Price is not valid'
                                  require ext_code.size(_param2)
                                  call _param2.decimals() with:
                                       gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                                  if not prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                      if 10^ext_call.return_data[31 len 1]:
                                          return (0 / 10^ext_call.return_data[31 len 1])
                                  else:
                                      if prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)]:
                                          if _param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] != _param1:
                                              revert with 0, 'ds-math-mul-overflow'
                                          if 10^ext_call.return_data[31 len 1]:
                                              return (_param1 * prices[_param2] * 10^ext_call.return_data[0] / prices[addr(_param3)] / 10^ext_call.return_data[31 len 1])
  revert


# hash = 0x80971a36
# getter = None
# const = None
# payable = False
def unknown80971a36(array _param1): # not payable
  mem[128 len 32 * _param1.length] = call.data[_param1 + 36 len 32 * _param1.length]
  [94midx = 0
  while [94midx < _param1.length:
      require [94midx < _param1.length
      [94m_22 = mem[(32 * [94midx) + 128]
      mem[(32 * _param1.length) + 132] = mem[(32 * [94midx) + 140 len 20]
      require ext_code.size(unknown06433b1bAddress)
      call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
           gas gas_remaining wei
          args addr([94m_22)
      mem[(32 * _param1.length) + 128] = ext_call.return_data[0]
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if lastUpdate + (48 * 24 * 3600) < lastUpdate:
          revert with 0, 'ds-math-add-overflow'
      mem[0] = addr([94m_22)
      mem[32] = 8
      if prices[addr([94m_22)]:
          if ext_call.return_data[0]:
              if block.timestamp < lastUpdate + (48 * 24 * 3600):
                  [94midx = [94midx + 1
                  continue 
              else:
                  return 0
          else:
              return 0
      else:
          return 0
  return 1


# hash = 0x82d32ac7
# getter = None
# const = ['return', 1364068194842176056990105843868530818345537040110]
# payable = False
const unknown82d32ac7 = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee


# hash = 0x8da5cb5b
# getter = ['storage', 160, 0, 1]
# const = None
# payable = False
def owner(): # not payable
  return owner


# hash = 0x8edbf436
# getter = None
# const = None
# payable = False
def getPriceInfo(address _ofAsset): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _ofAsset
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_ofAsset)]:
      require ext_code.size(QUOTE_ASSETAddress)
      call QUOTE_ASSETAddress.decimals() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if not prices[stor3]:
          revert with 0, 'Price is not valid'
      if not 10^ext_call.return_data[0]:
          require prices[stor3]
          if not prices[addr(_ofAsset)]:
              revert with 0, 'Price is not valid'
          return 0 / prices[stor3], ext_call.return_data[0]
      require 10^ext_call.return_data[0]
      if prices[_ofAsset] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofAsset]:
          revert with 0, 'ds-math-mul-overflow'
      require prices[stor3]
      if not prices[addr(_ofAsset)]:
          revert with 0, 'Price is not valid'
  else:
      if not ext_call.return_data[0]:
          require ext_code.size(QUOTE_ASSETAddress)
          call QUOTE_ASSETAddress.decimals() with:
               gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[stor3]:
              revert with 0, 'Price is not valid'
          if not 10^ext_call.return_data[0]:
              require prices[stor3]
              if not ext_call.return_data[0]:
                  revert with 0, 'Price is not valid'
              return 0 / prices[stor3], ext_call.return_data[0]
          require 10^ext_call.return_data[0]
          if prices[_ofAsset] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofAsset]:
              revert with 0, 'ds-math-mul-overflow'
          require prices[stor3]
          if not ext_call.return_data[0]:
              revert with 0, 'Price is not valid'
      else:
          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              if not 10^ext_call.return_data[0]:
                  require prices[stor3]
                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                      revert with 0, 'Price is not valid'
                  return 0 / prices[stor3], ext_call.return_data[0]
              require 10^ext_call.return_data[0]
              if prices[_ofAsset] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofAsset]:
                  revert with 0, 'ds-math-mul-overflow'
              require prices[stor3]
              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                  revert with 0, 'Price is not valid'
          else:
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args QUOTE_ASSETAddress
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              if not prices[stor3]:
                  if not 10^ext_call.return_data[0]:
                      require prices[stor3]
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      return 0 / prices[stor3], ext_call.return_data[0]
                  require 10^ext_call.return_data[0]
                  if prices[_ofAsset] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofAsset]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[stor3]
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
              else:
                  if not ext_call.return_data[0]:
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if not ext_call.return_data[0]:
                              revert with 0, 'Price is not valid'
                          return 0 / prices[stor3], ext_call.return_data[0]
                      require 10^ext_call.return_data[0]
                      if prices[_ofAsset] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofAsset]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                  else:
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          return 0 / prices[stor3], ext_call.return_data[0]
                      require 10^ext_call.return_data[0]
                      if prices[_ofAsset] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofAsset]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
  return prices[_ofAsset] * 10^ext_call.return_data[0] / prices[stor3], ext_call.return_data[0]


# hash = 0x8fb5a482
# getter = None
# const = None
# payable = False
def getPrices(address[] _ofAssets): # not payable
  mem[128 len 32 * _ofAssets.length] = call.data[_ofAssets + 36 len 32 * _ofAssets.length]
  mem[(32 * _ofAssets.length) + 128] = _ofAssets.length
  if not _ofAssets.length:
      mem[(64 * _ofAssets.length) + 160] = _ofAssets.length
      if not _ofAssets.length:
          [94midx = 0
          while [94midx < _ofAssets.length:
              require [94midx < _ofAssets.length
              [94m_575 = mem[(32 * [94midx) + 128]
              mem[(98 * _ofAssets.length) + 196] = mem[(32 * [94midx) + 140 len 20]
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args addr([94m_575)
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              if not prices[addr([94m_575)]:
                  require ext_code.size(QUOTE_ASSETAddress)
                  call QUOTE_ASSETAddress.decimals() with:
                       gas gas_remaining wei
                  mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
                  mem[32] = 8
                  mem[0] = addr([94m_575)
                  if not 10^ext_call.return_data[0]:
                      require prices[stor3]
                      if not prices[addr([94m_575)]:
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                  else:
                      require 10^ext_call.return_data[0]
                      if prices[addr([94m_575)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_575)]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if not prices[addr([94m_575)]:
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_575)] * 10^ext_call.return_data[0] / prices[stor3]
              else:
                  if not ext_call.return_data[0]:
                      require ext_code.size(QUOTE_ASSETAddress)
                      call QUOTE_ASSETAddress.decimals() with:
                           gas gas_remaining wei
                      mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      mem[32] = 8
                      mem[0] = addr([94m_575)
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if not ext_call.return_data[0]:
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                      else:
                          require 10^ext_call.return_data[0]
                          if prices[addr([94m_575)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_575)]:
                              revert with 0, 'ds-math-mul-overflow'
                          require prices[stor3]
                          if not ext_call.return_data[0]:
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_575)] * 10^ext_call.return_data[0] / prices[stor3]
                  else:
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          require ext_code.size(QUOTE_ASSETAddress)
                          call QUOTE_ASSETAddress.decimals() with:
                               gas gas_remaining wei
                          mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >= 32
                          if not prices[stor3]:
                              revert with 0, 'Price is not valid'
                          mem[32] = 8
                          mem[0] = addr([94m_575)
                          if not 10^ext_call.return_data[0]:
                              require prices[stor3]
                              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                          else:
                              require 10^ext_call.return_data[0]
                              if prices[addr([94m_575)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_575)]:
                                  revert with 0, 'ds-math-mul-overflow'
                              require prices[stor3]
                              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_575)] * 10^ext_call.return_data[0] / prices[stor3]
                      else:
                          mem[(98 * _ofAssets.length) + 196] = QUOTE_ASSETAddress
                          require ext_code.size(unknown06433b1bAddress)
                          call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                               gas gas_remaining wei
                              args QUOTE_ASSETAddress
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >= 32
                          if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                              revert with 0, 'ds-math-add-overflow'
                          require ext_code.size(QUOTE_ASSETAddress)
                          call QUOTE_ASSETAddress.decimals() with:
                               gas gas_remaining wei
                          mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >= 32
                          if not prices[stor3]:
                              revert with 0, 'Price is not valid'
                          mem[32] = 8
                          mem[0] = addr([94m_575)
                          if not prices[stor3]:
                              if not 10^ext_call.return_data[0]:
                                  require prices[stor3]
                                  if not prices[stor3]:
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                              else:
                                  require 10^ext_call.return_data[0]
                                  if prices[addr([94m_575)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_575)]:
                                      revert with 0, 'ds-math-mul-overflow'
                                  require prices[stor3]
                                  if not prices[stor3]:
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_575)] * 10^ext_call.return_data[0] / prices[stor3]
                          else:
                              if not ext_call.return_data[0]:
                                  if not 10^ext_call.return_data[0]:
                                      require prices[stor3]
                                      if not ext_call.return_data[0]:
                                          revert with 0, 'Price is not valid'
                                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                                  else:
                                      require 10^ext_call.return_data[0]
                                      if prices[addr([94m_575)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_575)]:
                                          revert with 0, 'ds-math-mul-overflow'
                                      require prices[stor3]
                                      if not ext_call.return_data[0]:
                                          revert with 0, 'Price is not valid'
                                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_575)] * 10^ext_call.return_data[0] / prices[stor3]
                              else:
                                  if not 10^ext_call.return_data[0]:
                                      require prices[stor3]
                                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                          revert with 0, 'Price is not valid'
                                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                                  else:
                                      require 10^ext_call.return_data[0]
                                      if prices[addr([94m_575)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_575)]:
                                          revert with 0, 'ds-math-mul-overflow'
                                      require prices[stor3]
                                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                          revert with 0, 'Price is not valid'
                                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_575)] * 10^ext_call.return_data[0] / prices[stor3]
              [94midx = [94midx + 1
              continue 
          mem[(98 * _ofAssets.length) + 192] = 64
          mem[(98 * _ofAssets.length) + 256] = mem[(32 * _ofAssets.length) + 128]
          mem[(98 * _ofAssets.length) + 288 len floor32(mem[(32 * _ofAssets.length) + 128])] = mem[(32 * _ofAssets.length) + 160 len floor32(mem[(32 * _ofAssets.length) + 128])]
          mem[(98 * _ofAssets.length) + 224] = (32 * mem[(32 * _ofAssets.length) + 128]) + 96
          mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 288] = mem[(64 * _ofAssets.length) + 160]
          [94m_1121 = mem[(64 * _ofAssets.length) + 160]
          mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 320 len floor32(mem[(64 * _ofAssets.length) + 160])] = mem[(64 * _ofAssets.length) + 192 len floor32(mem[(64 * _ofAssets.length) + 160])]
          return 64, mem[(98 * _ofAssets.length) + 224 len (32 * [94m_1121) + (32 * mem[(32 * _ofAssets.length) + 128]) + 96]
      mem[(64 * _ofAssets.length) + 192 len 32 * _ofAssets.length] = code.data[6834 len 32 * _ofAssets.length]
      [94midx = 0
      while [94midx < _ofAssets.length:
          require [94midx < _ofAssets.length
          [94m_579 = mem[(32 * [94midx) + 128]
          mem[(98 * _ofAssets.length) + 196] = mem[(32 * [94midx) + 140 len 20]
          require ext_code.size(unknown06433b1bAddress)
          call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
               gas gas_remaining wei
              args addr([94m_579)
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if lastUpdate + (48 * 24 * 3600) < lastUpdate:
              revert with 0, 'ds-math-add-overflow'
          if not prices[addr([94m_579)]:
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              mem[32] = 8
              mem[0] = addr([94m_579)
              if not 10^ext_call.return_data[0]:
                  require prices[stor3]
                  if not prices[addr([94m_579)]:
                      revert with 0, 'Price is not valid'
                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
              else:
                  require 10^ext_call.return_data[0]
                  if prices[addr([94m_579)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_579)]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[stor3]
                  if not prices[addr([94m_579)]:
                      revert with 0, 'Price is not valid'
                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_579)] * 10^ext_call.return_data[0] / prices[stor3]
          else:
              if not ext_call.return_data[0]:
                  require ext_code.size(QUOTE_ASSETAddress)
                  call QUOTE_ASSETAddress.decimals() with:
                       gas gas_remaining wei
                  mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
                  mem[32] = 8
                  mem[0] = addr([94m_579)
                  if not 10^ext_call.return_data[0]:
                      require prices[stor3]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                  else:
                      require 10^ext_call.return_data[0]
                      if prices[addr([94m_579)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_579)]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_579)] * 10^ext_call.return_data[0] / prices[stor3]
              else:
                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                      require ext_code.size(QUOTE_ASSETAddress)
                      call QUOTE_ASSETAddress.decimals() with:
                           gas gas_remaining wei
                      mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      mem[32] = 8
                      mem[0] = addr([94m_579)
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                      else:
                          require 10^ext_call.return_data[0]
                          if prices[addr([94m_579)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_579)]:
                              revert with 0, 'ds-math-mul-overflow'
                          require prices[stor3]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_579)] * 10^ext_call.return_data[0] / prices[stor3]
                  else:
                      mem[(98 * _ofAssets.length) + 196] = QUOTE_ASSETAddress
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                           gas gas_remaining wei
                          args QUOTE_ASSETAddress
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                          revert with 0, 'ds-math-add-overflow'
                      require ext_code.size(QUOTE_ASSETAddress)
                      call QUOTE_ASSETAddress.decimals() with:
                           gas gas_remaining wei
                      mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      mem[32] = 8
                      mem[0] = addr([94m_579)
                      if not prices[stor3]:
                          if not 10^ext_call.return_data[0]:
                              require prices[stor3]
                              if not prices[stor3]:
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                          else:
                              require 10^ext_call.return_data[0]
                              if prices[addr([94m_579)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_579)]:
                                  revert with 0, 'ds-math-mul-overflow'
                              require prices[stor3]
                              if not prices[stor3]:
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_579)] * 10^ext_call.return_data[0] / prices[stor3]
                      else:
                          if not ext_call.return_data[0]:
                              if not 10^ext_call.return_data[0]:
                                  require prices[stor3]
                                  if not ext_call.return_data[0]:
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                              else:
                                  require 10^ext_call.return_data[0]
                                  if prices[addr([94m_579)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_579)]:
                                      revert with 0, 'ds-math-mul-overflow'
                                  require prices[stor3]
                                  if not ext_call.return_data[0]:
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_579)] * 10^ext_call.return_data[0] / prices[stor3]
                          else:
                              if not 10^ext_call.return_data[0]:
                                  require prices[stor3]
                                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                              else:
                                  require 10^ext_call.return_data[0]
                                  if prices[addr([94m_579)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_579)]:
                                      revert with 0, 'ds-math-mul-overflow'
                                  require prices[stor3]
                                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_579)] * 10^ext_call.return_data[0] / prices[stor3]
          [94midx = [94midx + 1
          continue 
      mem[(98 * _ofAssets.length) + 192] = 64
      mem[(98 * _ofAssets.length) + 256] = mem[(32 * _ofAssets.length) + 128]
      mem[(98 * _ofAssets.length) + 288 len floor32(mem[(32 * _ofAssets.length) + 128])] = mem[(32 * _ofAssets.length) + 160 len floor32(mem[(32 * _ofAssets.length) + 128])]
      mem[(98 * _ofAssets.length) + 224] = (32 * mem[(32 * _ofAssets.length) + 128]) + 96
      mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 288] = mem[(64 * _ofAssets.length) + 160]
      [94m_1124 = mem[(64 * _ofAssets.length) + 160]
      mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 320 len floor32(mem[(64 * _ofAssets.length) + 160])] = mem[(64 * _ofAssets.length) + 192 len floor32(mem[(64 * _ofAssets.length) + 160])]
      return 64, mem[(98 * _ofAssets.length) + 224 len (32 * [94m_1124) + (32 * mem[(32 * _ofAssets.length) + 128]) + 96]
  mem[(32 * _ofAssets.length) + 160 len 32 * _ofAssets.length] = code.data[6834 len 32 * _ofAssets.length]
  mem[(64 * _ofAssets.length) + 160] = _ofAssets.length
  if not _ofAssets.length:
      [94midx = 0
      while [94midx < _ofAssets.length:
          require [94midx < _ofAssets.length
          [94m_583 = mem[(32 * [94midx) + 128]
          mem[(98 * _ofAssets.length) + 196] = mem[(32 * [94midx) + 140 len 20]
          require ext_code.size(unknown06433b1bAddress)
          call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
               gas gas_remaining wei
              args addr([94m_583)
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if lastUpdate + (48 * 24 * 3600) < lastUpdate:
              revert with 0, 'ds-math-add-overflow'
          if not prices[addr([94m_583)]:
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              mem[32] = 8
              mem[0] = addr([94m_583)
              if not 10^ext_call.return_data[0]:
                  require prices[stor3]
                  if not prices[addr([94m_583)]:
                      revert with 0, 'Price is not valid'
                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
              else:
                  require 10^ext_call.return_data[0]
                  if prices[addr([94m_583)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_583)]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[stor3]
                  if not prices[addr([94m_583)]:
                      revert with 0, 'Price is not valid'
                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_583)] * 10^ext_call.return_data[0] / prices[stor3]
          else:
              if not ext_call.return_data[0]:
                  require ext_code.size(QUOTE_ASSETAddress)
                  call QUOTE_ASSETAddress.decimals() with:
                       gas gas_remaining wei
                  mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
                  mem[32] = 8
                  mem[0] = addr([94m_583)
                  if not 10^ext_call.return_data[0]:
                      require prices[stor3]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                  else:
                      require 10^ext_call.return_data[0]
                      if prices[addr([94m_583)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_583)]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_583)] * 10^ext_call.return_data[0] / prices[stor3]
              else:
                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                      require ext_code.size(QUOTE_ASSETAddress)
                      call QUOTE_ASSETAddress.decimals() with:
                           gas gas_remaining wei
                      mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      mem[32] = 8
                      mem[0] = addr([94m_583)
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                      else:
                          require 10^ext_call.return_data[0]
                          if prices[addr([94m_583)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_583)]:
                              revert with 0, 'ds-math-mul-overflow'
                          require prices[stor3]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_583)] * 10^ext_call.return_data[0] / prices[stor3]
                  else:
                      mem[(98 * _ofAssets.length) + 196] = QUOTE_ASSETAddress
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                           gas gas_remaining wei
                          args QUOTE_ASSETAddress
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                          revert with 0, 'ds-math-add-overflow'
                      require ext_code.size(QUOTE_ASSETAddress)
                      call QUOTE_ASSETAddress.decimals() with:
                           gas gas_remaining wei
                      mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >= 32
                      if not prices[stor3]:
                          revert with 0, 'Price is not valid'
                      mem[32] = 8
                      mem[0] = addr([94m_583)
                      if not prices[stor3]:
                          if not 10^ext_call.return_data[0]:
                              require prices[stor3]
                              if not prices[stor3]:
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                          else:
                              require 10^ext_call.return_data[0]
                              if prices[addr([94m_583)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_583)]:
                                  revert with 0, 'ds-math-mul-overflow'
                              require prices[stor3]
                              if not prices[stor3]:
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_583)] * 10^ext_call.return_data[0] / prices[stor3]
                      else:
                          if not ext_call.return_data[0]:
                              if not 10^ext_call.return_data[0]:
                                  require prices[stor3]
                                  if not ext_call.return_data[0]:
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                              else:
                                  require 10^ext_call.return_data[0]
                                  if prices[addr([94m_583)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_583)]:
                                      revert with 0, 'ds-math-mul-overflow'
                                  require prices[stor3]
                                  if not ext_call.return_data[0]:
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_583)] * 10^ext_call.return_data[0] / prices[stor3]
                          else:
                              if not 10^ext_call.return_data[0]:
                                  require prices[stor3]
                                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                              else:
                                  require 10^ext_call.return_data[0]
                                  if prices[addr([94m_583)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_583)]:
                                      revert with 0, 'ds-math-mul-overflow'
                                  require prices[stor3]
                                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                      revert with 0, 'Price is not valid'
                                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_583)] * 10^ext_call.return_data[0] / prices[stor3]
          [94midx = [94midx + 1
          continue 
      mem[(98 * _ofAssets.length) + 192] = 64
      mem[(98 * _ofAssets.length) + 256] = mem[(32 * _ofAssets.length) + 128]
      mem[(98 * _ofAssets.length) + 288 len floor32(mem[(32 * _ofAssets.length) + 128])] = mem[(32 * _ofAssets.length) + 160 len floor32(mem[(32 * _ofAssets.length) + 128])]
      mem[(98 * _ofAssets.length) + 224] = (32 * mem[(32 * _ofAssets.length) + 128]) + 96
      mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 288] = mem[(64 * _ofAssets.length) + 160]
      [94m_1127 = mem[(64 * _ofAssets.length) + 160]
      mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 320 len floor32(mem[(64 * _ofAssets.length) + 160])] = mem[(64 * _ofAssets.length) + 192 len floor32(mem[(64 * _ofAssets.length) + 160])]
      return 64, mem[(98 * _ofAssets.length) + 224 len (32 * [94m_1127) + (32 * mem[(32 * _ofAssets.length) + 128]) + 96]
  mem[(64 * _ofAssets.length) + 192 len 32 * _ofAssets.length] = code.data[6834 len 32 * _ofAssets.length]
  [94midx = 0
  while [94midx < _ofAssets.length:
      require [94midx < _ofAssets.length
      [94m_587 = mem[(32 * [94midx) + 128]
      mem[(98 * _ofAssets.length) + 196] = mem[(32 * [94midx) + 140 len 20]
      require ext_code.size(unknown06433b1bAddress)
      call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
           gas gas_remaining wei
          args addr([94m_587)
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if lastUpdate + (48 * 24 * 3600) < lastUpdate:
          revert with 0, 'ds-math-add-overflow'
      if not prices[addr([94m_587)]:
          require ext_code.size(QUOTE_ASSETAddress)
          call QUOTE_ASSETAddress.decimals() with:
               gas gas_remaining wei
          mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[stor3]:
              revert with 0, 'Price is not valid'
          mem[32] = 8
          mem[0] = addr([94m_587)
          if not 10^ext_call.return_data[0]:
              require prices[stor3]
              if not prices[addr([94m_587)]:
                  revert with 0, 'Price is not valid'
              require [94midx < mem[(32 * _ofAssets.length) + 128]
              require [94midx < mem[(64 * _ofAssets.length) + 160]
              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
          else:
              require 10^ext_call.return_data[0]
              if prices[addr([94m_587)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_587)]:
                  revert with 0, 'ds-math-mul-overflow'
              require prices[stor3]
              if not prices[addr([94m_587)]:
                  revert with 0, 'Price is not valid'
              require [94midx < mem[(32 * _ofAssets.length) + 128]
              require [94midx < mem[(64 * _ofAssets.length) + 160]
              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_587)] * 10^ext_call.return_data[0] / prices[stor3]
      else:
          if not ext_call.return_data[0]:
              require ext_code.size(QUOTE_ASSETAddress)
              call QUOTE_ASSETAddress.decimals() with:
                   gas gas_remaining wei
              mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[stor3]:
                  revert with 0, 'Price is not valid'
              mem[32] = 8
              mem[0] = addr([94m_587)
              if not 10^ext_call.return_data[0]:
                  require prices[stor3]
                  if not ext_call.return_data[0]:
                      revert with 0, 'Price is not valid'
                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
              else:
                  require 10^ext_call.return_data[0]
                  if prices[addr([94m_587)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_587)]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[stor3]
                  if not ext_call.return_data[0]:
                      revert with 0, 'Price is not valid'
                  require [94midx < mem[(32 * _ofAssets.length) + 128]
                  require [94midx < mem[(64 * _ofAssets.length) + 160]
                  mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                  mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_587)] * 10^ext_call.return_data[0] / prices[stor3]
          else:
              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                  require ext_code.size(QUOTE_ASSETAddress)
                  call QUOTE_ASSETAddress.decimals() with:
                       gas gas_remaining wei
                  mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
                  mem[32] = 8
                  mem[0] = addr([94m_587)
                  if not 10^ext_call.return_data[0]:
                      require prices[stor3]
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                  else:
                      require 10^ext_call.return_data[0]
                      if prices[addr([94m_587)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_587)]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[stor3]
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
                      require [94midx < mem[(32 * _ofAssets.length) + 128]
                      require [94midx < mem[(64 * _ofAssets.length) + 160]
                      mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                      mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_587)] * 10^ext_call.return_data[0] / prices[stor3]
              else:
                  mem[(98 * _ofAssets.length) + 196] = QUOTE_ASSETAddress
                  require ext_code.size(unknown06433b1bAddress)
                  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                       gas gas_remaining wei
                      args QUOTE_ASSETAddress
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                      revert with 0, 'ds-math-add-overflow'
                  require ext_code.size(QUOTE_ASSETAddress)
                  call QUOTE_ASSETAddress.decimals() with:
                       gas gas_remaining wei
                  mem[(98 * _ofAssets.length) + 192] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not prices[stor3]:
                      revert with 0, 'Price is not valid'
                  mem[32] = 8
                  mem[0] = addr([94m_587)
                  if not prices[stor3]:
                      if not 10^ext_call.return_data[0]:
                          require prices[stor3]
                          if not prices[stor3]:
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                      else:
                          require 10^ext_call.return_data[0]
                          if prices[addr([94m_587)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_587)]:
                              revert with 0, 'ds-math-mul-overflow'
                          require prices[stor3]
                          if not prices[stor3]:
                              revert with 0, 'Price is not valid'
                          require [94midx < mem[(32 * _ofAssets.length) + 128]
                          require [94midx < mem[(64 * _ofAssets.length) + 160]
                          mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                          mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_587)] * 10^ext_call.return_data[0] / prices[stor3]
                  else:
                      if not ext_call.return_data[0]:
                          if not 10^ext_call.return_data[0]:
                              require prices[stor3]
                              if not ext_call.return_data[0]:
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                          else:
                              require 10^ext_call.return_data[0]
                              if prices[addr([94m_587)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_587)]:
                                  revert with 0, 'ds-math-mul-overflow'
                              require prices[stor3]
                              if not ext_call.return_data[0]:
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_587)] * 10^ext_call.return_data[0] / prices[stor3]
                      else:
                          if not 10^ext_call.return_data[0]:
                              require prices[stor3]
                              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = 0 / prices[stor3]
                          else:
                              require 10^ext_call.return_data[0]
                              if prices[addr([94m_587)] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[addr([94m_587)]:
                                  revert with 0, 'ds-math-mul-overflow'
                              require prices[stor3]
                              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                                  revert with 0, 'Price is not valid'
                              require [94midx < mem[(32 * _ofAssets.length) + 128]
                              require [94midx < mem[(64 * _ofAssets.length) + 160]
                              mem[(64 * _ofAssets.length) + (32 * [94midx) + 192] = block.timestamp
                              mem[(32 * [94midx) + (32 * _ofAssets.length) + 160] = prices[addr([94m_587)] * 10^ext_call.return_data[0] / prices[stor3]
      [94midx = [94midx + 1
      continue 
  mem[(98 * _ofAssets.length) + 192] = 64
  mem[(98 * _ofAssets.length) + 256] = mem[(32 * _ofAssets.length) + 128]
  mem[(98 * _ofAssets.length) + 288 len floor32(mem[(32 * _ofAssets.length) + 128])] = mem[(32 * _ofAssets.length) + 160 len floor32(mem[(32 * _ofAssets.length) + 128])]
  mem[(98 * _ofAssets.length) + 224] = (32 * mem[(32 * _ofAssets.length) + 128]) + 96
  mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 288] = mem[(64 * _ofAssets.length) + 160]
  [94m_1130 = mem[(64 * _ofAssets.length) + 160]
  mem[(32 * mem[(32 * _ofAssets.length) + 128]) + (98 * _ofAssets.length) + 320 len floor32(mem[(64 * _ofAssets.length) + 160])] = mem[(64 * _ofAssets.length) + 192 len floor32(mem[(64 * _ofAssets.length) + 160])]
  return 64, mem[(98 * _ofAssets.length) + 224 len (32 * [94m_1130) + (32 * mem[(32 * _ofAssets.length) + 128]) + 96]


# hash = 0x93da4cfd
# getter = None
# const = None
# payable = False
def getInvertedPriceInfo(address _ofAsset): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args QUOTE_ASSETAddress
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[stor3]:
      require ext_code.size(_ofAsset)
      call _ofAsset.decimals() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if not prices[addr(_ofAsset)]:
          revert with 0, 'Price is not valid'
      if not 10^ext_call.return_data[0]:
          require prices[addr(_ofAsset)]
          if not prices[stor3]:
              revert with 0, 'Price is not valid'
          return 0 / prices[addr(_ofAsset)], ext_call.return_data[0]
      require 10^ext_call.return_data[0]
      if prices[stor3] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[stor3]:
          revert with 0, 'ds-math-mul-overflow'
      require prices[addr(_ofAsset)]
      if not prices[stor3]:
          revert with 0, 'Price is not valid'
  else:
      if not ext_call.return_data[0]:
          require ext_code.size(_ofAsset)
          call _ofAsset.decimals() with:
               gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[addr(_ofAsset)]:
              revert with 0, 'Price is not valid'
          if not 10^ext_call.return_data[0]:
              require prices[addr(_ofAsset)]
              if not ext_call.return_data[0]:
                  revert with 0, 'Price is not valid'
              return 0 / prices[addr(_ofAsset)], ext_call.return_data[0]
          require 10^ext_call.return_data[0]
          if prices[stor3] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[stor3]:
              revert with 0, 'ds-math-mul-overflow'
          require prices[addr(_ofAsset)]
          if not ext_call.return_data[0]:
              revert with 0, 'Price is not valid'
      else:
          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
              require ext_code.size(_ofAsset)
              call _ofAsset.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_ofAsset)]:
                  revert with 0, 'Price is not valid'
              if not 10^ext_call.return_data[0]:
                  require prices[addr(_ofAsset)]
                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                      revert with 0, 'Price is not valid'
                  return 0 / prices[addr(_ofAsset)], ext_call.return_data[0]
              require 10^ext_call.return_data[0]
              if prices[stor3] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[stor3]:
                  revert with 0, 'ds-math-mul-overflow'
              require prices[addr(_ofAsset)]
              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                  revert with 0, 'Price is not valid'
          else:
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args _ofAsset
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              require ext_code.size(_ofAsset)
              call _ofAsset.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_ofAsset)]:
                  revert with 0, 'Price is not valid'
              if not prices[addr(_ofAsset)]:
                  if not 10^ext_call.return_data[0]:
                      require prices[addr(_ofAsset)]
                      if not prices[addr(_ofAsset)]:
                          revert with 0, 'Price is not valid'
                      return 0 / prices[addr(_ofAsset)], ext_call.return_data[0]
                  require 10^ext_call.return_data[0]
                  if prices[stor3] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[stor3]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[addr(_ofAsset)]
                  if not prices[addr(_ofAsset)]:
                      revert with 0, 'Price is not valid'
              else:
                  if not ext_call.return_data[0]:
                      if not 10^ext_call.return_data[0]:
                          require prices[addr(_ofAsset)]
                          if not ext_call.return_data[0]:
                              revert with 0, 'Price is not valid'
                          return 0 / prices[addr(_ofAsset)], ext_call.return_data[0]
                      require 10^ext_call.return_data[0]
                      if prices[stor3] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[stor3]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[addr(_ofAsset)]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                  else:
                      if not 10^ext_call.return_data[0]:
                          require prices[addr(_ofAsset)]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          return 0 / prices[addr(_ofAsset)], ext_call.return_data[0]
                      require 10^ext_call.return_data[0]
                      if prices[stor3] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[stor3]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[addr(_ofAsset)]
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
  return prices[stor3] * 10^ext_call.return_data[0] / prices[addr(_ofAsset)], ext_call.return_data[0]


# hash = 0x94a68630
# getter = ['storage', 160, 0, 4]
# const = None
# payable = False
def unknown94a68630(): # not payable
  return unknown94a68630Address


# hash = 0x977d6276
# getter = None
# const = None
# payable = False
def getOrderPriceInfo(address _sellAsset, address _buyAsset, uint256 _sellQuantity, uint256 _buyQuantity): # not payable
  require ext_code.size(_sellAsset)
  call _sellAsset.decimals() with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if not 10^ext_call.return_data[0]:
      if _sellQuantity:
          return (0 / _sellQuantity)
  else:
      if 10^ext_call.return_data[0]:
          if _buyQuantity * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != _buyQuantity:
              revert with 0, 'ds-math-mul-overflow'
          if _sellQuantity:
              return (_buyQuantity * 10^ext_call.return_data[0] / _sellQuantity)
  revert


# hash = 0x9d54f419
# getter = None
# const = None
# payable = False
def setUpdater(address _updater): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.owner() with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if ext_call.return_data[12 len 20] != caller:
      revert with 0, 'Only registry owner can set'
  unknown94a68630Address = _updater


# hash = 0xa159c937
# getter = None
# const = None
# payable = False
def getReferencePriceInfo(address _ofBase, address _ofQuote): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _ofBase
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_ofBase)]:
      require ext_code.size(_ofQuote)
      call _ofQuote.decimals() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if not prices[addr(_ofQuote)]:
          revert with 0, 'Price is not valid'
      if not 10^ext_call.return_data[0]:
          require prices[addr(_ofQuote)]
          if not prices[addr(_ofBase)]:
              revert with 0, 'Price is not valid'
          return 0 / prices[addr(_ofQuote)], ext_call.return_data[0]
      require 10^ext_call.return_data[0]
      if prices[_ofBase] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofBase]:
          revert with 0, 'ds-math-mul-overflow'
      require prices[addr(_ofQuote)]
      if not prices[addr(_ofBase)]:
          revert with 0, 'Price is not valid'
  else:
      if not ext_call.return_data[0]:
          require ext_code.size(_ofQuote)
          call _ofQuote.decimals() with:
               gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >= 32
          if not prices[addr(_ofQuote)]:
              revert with 0, 'Price is not valid'
          if not 10^ext_call.return_data[0]:
              require prices[addr(_ofQuote)]
              if not ext_call.return_data[0]:
                  revert with 0, 'Price is not valid'
              return 0 / prices[addr(_ofQuote)], ext_call.return_data[0]
          require 10^ext_call.return_data[0]
          if prices[_ofBase] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofBase]:
              revert with 0, 'ds-math-mul-overflow'
          require prices[addr(_ofQuote)]
          if not ext_call.return_data[0]:
              revert with 0, 'Price is not valid'
      else:
          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
              require ext_code.size(_ofQuote)
              call _ofQuote.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_ofQuote)]:
                  revert with 0, 'Price is not valid'
              if not 10^ext_call.return_data[0]:
                  require prices[addr(_ofQuote)]
                  if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                      revert with 0, 'Price is not valid'
                  return 0 / prices[addr(_ofQuote)], ext_call.return_data[0]
              require 10^ext_call.return_data[0]
              if prices[_ofBase] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofBase]:
                  revert with 0, 'ds-math-mul-overflow'
              require prices[addr(_ofQuote)]
              if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                  revert with 0, 'Price is not valid'
          else:
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
                   gas gas_remaining wei
                  args _ofQuote
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if lastUpdate + (48 * 24 * 3600) < lastUpdate:
                  revert with 0, 'ds-math-add-overflow'
              require ext_code.size(_ofQuote)
              call _ofQuote.decimals() with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >= 32
              if not prices[addr(_ofQuote)]:
                  revert with 0, 'Price is not valid'
              if not prices[addr(_ofQuote)]:
                  if not 10^ext_call.return_data[0]:
                      require prices[addr(_ofQuote)]
                      if not prices[addr(_ofQuote)]:
                          revert with 0, 'Price is not valid'
                      return 0 / prices[addr(_ofQuote)], ext_call.return_data[0]
                  require 10^ext_call.return_data[0]
                  if prices[_ofBase] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofBase]:
                      revert with 0, 'ds-math-mul-overflow'
                  require prices[addr(_ofQuote)]
                  if not prices[addr(_ofQuote)]:
                      revert with 0, 'Price is not valid'
              else:
                  if not ext_call.return_data[0]:
                      if not 10^ext_call.return_data[0]:
                          require prices[addr(_ofQuote)]
                          if not ext_call.return_data[0]:
                              revert with 0, 'Price is not valid'
                          return 0 / prices[addr(_ofQuote)], ext_call.return_data[0]
                      require 10^ext_call.return_data[0]
                      if prices[_ofBase] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofBase]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[addr(_ofQuote)]
                      if not ext_call.return_data[0]:
                          revert with 0, 'Price is not valid'
                  else:
                      if not 10^ext_call.return_data[0]:
                          require prices[addr(_ofQuote)]
                          if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                              revert with 0, 'Price is not valid'
                          return 0 / prices[addr(_ofQuote)], ext_call.return_data[0]
                      require 10^ext_call.return_data[0]
                      if prices[_ofBase] * 10^ext_call.return_data[0] / 10^ext_call.return_data[0] != prices[_ofBase]:
                          revert with 0, 'ds-math-mul-overflow'
                      require prices[addr(_ofQuote)]
                      if block.timestamp >= lastUpdate + (48 * 24 * 3600):
                          revert with 0, 'Price is not valid'
  return prices[_ofBase] * 10^ext_call.return_data[0] / prices[addr(_ofQuote)], ext_call.return_data[0]


# hash = 0xa2e62045
# getter = None
# const = None
# payable = False
def update(): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.owner() with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if caller == ext_call.return_data[12 len 20]:
      mem[96] = 0xcf5cb13200000000000000000000000000000000000000000000000000000000
      require ext_code.size(unknown06433b1bAddress)
      call unknown06433b1bAddress.getRegisteredAssets() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
      mem[64] = ceil32(return_data.size) + 96
      require return_data.size >= 32
      [94m_12 = mem[96]
      require mem[96] <= 4294967296
      require mem[96] + 32 <= return_data.size
      require mem[mem[96] + 96] <= 4294967296 and mem[96] + (32 * mem[mem[96] + 96]) + 32 <= return_data.size
      [94m_16 = mem[mem[96] + 96]
      mem[ceil32(return_data.size) + 96] = mem[mem[96] + 96]
      mem[64] = ceil32(return_data.size) + (32 * [94m_16) + 128
      if not [94m_16:
          [94m_5553 = mem[[94m_12 + 96]
          [94midx = 0
          while [94midx < [94m_5553:
              require [94midx < mem[[94m_12 + 96]
              [94m_5573 = mem[[94m_12 + (32 * [94midx) + 128]
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.0x74d32ad4 with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              else:
                  require return_data.size >= 32
                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 132] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_16) + 132], QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5573):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5573)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5573):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5573)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 132] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_16) + 132], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5573):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5573)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5573):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5573)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                  else:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5573), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
          lastUpdate = block.timestamp
          mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = 64
          mem[ceil32(return_data.size) + (32 * [94m_16) + 192] = mem[[94m_12 + 96]
          [94m_5559 = mem[[94m_12 + 96]
          mem[ceil32(return_data.size) + (32 * [94m_16) + 224 len floor32(mem[[94m_12 + 96])] = mem[[94m_12 + 128 len floor32(mem[[94m_12 + 96])]
          mem[ceil32(return_data.size) + (32 * [94m_16) + 160] = (32 * [94m_5559) + 96
          mem[(32 * [94m_5559) + ceil32(return_data.size) + (32 * [94m_16) + 224] = mem[ceil32(return_data.size) + 96]
          mem[(32 * [94m_5559) + ceil32(return_data.size) + (32 * [94m_16) + 256 len floor32(mem[ceil32(return_data.size) + 96])] = mem[ceil32(return_data.size) + 128 len floor32(mem[ceil32(return_data.size) + 96])]
          log 0x7da05e6b: 64, (32 * _5559) + 96, mem[ceil32(return_data.size) + (32 * _16) + 192 len (32 * mem[ceil32(return_data.size) + 96]) + (32 * _5559) + 64]
      else:
          mem[ceil32(return_data.size) + 128 len 32 * [94m_16] = code.data[6834 len 32 * [94m_16]
          [94m_5554 = mem[[94m_12 + 96]
          [94midx = 0
          while [94midx < [94m_5554:
              require [94midx < mem[[94m_12 + 96]
              [94m_5574 = mem[[94m_12 + (32 * [94midx) + 128]
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.0x74d32ad4 with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              else:
                  require return_data.size >= 32
                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 132] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_16) + 132], QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5574):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5574)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5574):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5574)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 132] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_16) + 132], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5574):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5574)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5574):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = addr([94m_5574)
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                  else:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_12 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_12 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5574), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_16) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_12 + 96]
                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_12 + 96]
                                                                                              mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_12 + 96]
                                                                                                  mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_12 + 96]
                                                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_12 + 96]
                                                                                                          mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_12 + 96]
                                                                      mem[0] = mem[[94m_12 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_12 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
          lastUpdate = block.timestamp
          mem[ceil32(return_data.size) + (32 * [94m_16) + 128] = 64
          mem[ceil32(return_data.size) + (32 * [94m_16) + 192] = mem[[94m_12 + 96]
          [94m_5563 = mem[[94m_12 + 96]
          mem[ceil32(return_data.size) + (32 * [94m_16) + 224 len floor32(mem[[94m_12 + 96])] = mem[[94m_12 + 128 len floor32(mem[[94m_12 + 96])]
          mem[ceil32(return_data.size) + (32 * [94m_16) + 160] = (32 * [94m_5563) + 96
          mem[(32 * [94m_5563) + ceil32(return_data.size) + (32 * [94m_16) + 224] = mem[ceil32(return_data.size) + 96]
          mem[(32 * [94m_5563) + ceil32(return_data.size) + (32 * [94m_16) + 256 len floor32(mem[ceil32(return_data.size) + 96])] = mem[ceil32(return_data.size) + 128 len floor32(mem[ceil32(return_data.size) + 96])]
          log 0x7da05e6b: 64, (32 * _5563) + 96, mem[ceil32(return_data.size) + (32 * _16) + 192 len (32 * mem[ceil32(return_data.size) + 96]) + (32 * _5563) + 64]
  else:
      if unknown94a68630Address != caller:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only registry owner or updater can call'
      mem[96] = 0xcf5cb13200000000000000000000000000000000000000000000000000000000
      require ext_code.size(unknown06433b1bAddress)
      call unknown06433b1bAddress.getRegisteredAssets() with:
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
      mem[64] = ceil32(return_data.size) + 96
      require return_data.size >= 32
      [94m_14 = mem[96]
      require mem[96] <= 4294967296
      require mem[96] + 32 <= return_data.size
      require mem[mem[96] + 96] <= 4294967296 and mem[96] + (32 * mem[mem[96] + 96]) + 32 <= return_data.size
      [94m_19 = mem[mem[96] + 96]
      mem[ceil32(return_data.size) + 96] = mem[mem[96] + 96]
      mem[64] = ceil32(return_data.size) + (32 * [94m_19) + 128
      if not [94m_19:
          [94m_5555 = mem[[94m_14 + 96]
          [94midx = 0
          while [94midx < [94m_5555:
              require [94midx < mem[[94m_14 + 96]
              [94m_5575 = mem[[94m_14 + (32 * [94midx) + 128]
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.0x74d32ad4 with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              else:
                  require return_data.size >= 32
                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 132] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_19) + 132], QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5575):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5575)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5575):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5575)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 132] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_19) + 132], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5575):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5575)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5575):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5575)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                  else:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5575), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
          lastUpdate = block.timestamp
          mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = 64
          mem[ceil32(return_data.size) + (32 * [94m_19) + 192] = mem[[94m_14 + 96]
          [94m_5567 = mem[[94m_14 + 96]
          mem[ceil32(return_data.size) + (32 * [94m_19) + 224 len floor32(mem[[94m_14 + 96])] = mem[[94m_14 + 128 len floor32(mem[[94m_14 + 96])]
          mem[ceil32(return_data.size) + (32 * [94m_19) + 160] = (32 * [94m_5567) + 96
          mem[(32 * [94m_5567) + ceil32(return_data.size) + (32 * [94m_19) + 224] = mem[ceil32(return_data.size) + 96]
          mem[(32 * [94m_5567) + ceil32(return_data.size) + (32 * [94m_19) + 256 len floor32(mem[ceil32(return_data.size) + 96])] = mem[ceil32(return_data.size) + 128 len floor32(mem[ceil32(return_data.size) + 96])]
          log 0x7da05e6b: 64, (32 * _5567) + 96, mem[ceil32(return_data.size) + (32 * _19) + 192 len (32 * mem[ceil32(return_data.size) + 96]) + (32 * _5567) + 64]
      else:
          mem[ceil32(return_data.size) + 128 len 32 * [94m_19] = code.data[6834 len 32 * [94m_19]
          [94m_5556 = mem[[94m_14 + 96]
          [94midx = 0
          while [94midx < [94m_5556:
              require [94midx < mem[[94m_14 + 96]
              [94m_5576 = mem[[94m_14 + (32 * [94midx) + 128]
              require ext_code.size(unknown06433b1bAddress)
              call unknown06433b1bAddress.0x74d32ad4 with:
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              else:
                  require return_data.size >= 32
                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 132] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_19) + 132], QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5576):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5576)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5576):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5576)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 132] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args mem[ceil32(return_data.size) + (32 * [94m_19) + 132], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5576):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5576)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != addr([94m_5576):
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = addr([94m_5576)
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                  else:
                      require ext_code.size(unknown06433b1bAddress)
                      call unknown06433b1bAddress.0x74d32ad4 with:
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      else:
                          require return_data.size >= 32
                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, QUOTE_ASSETAddress, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                          else:
                              require ext_code.size(unknown06433b1bAddress)
                              call unknown06433b1bAddress.0xf4196b63 with:
                                   gas gas_remaining wei
                                  args addr(mem[[94m_14 + (32 * [94midx) + 128])
                              if not ext_call.success:
                                  revert with ext_call.return_data[0 len return_data.size]
                              else:
                                  require return_data.size >= 32
                                  require ext_code.size(unknowne3b5ce76Address)
                                  call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                       gas gas_remaining wei
                                      args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  else:
                                      require return_data.size >= 64
                                      require ext_code.size(unknown06433b1bAddress)
                                      call unknown06433b1bAddress.0x74d32ad4 with:
                                           gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      else:
                                          require return_data.size >= 32
                                          if addr(ext_call.return_data[0]) != QUOTE_ASSETAddress:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args QUOTE_ASSETAddress, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                          else:
                                              require ext_code.size(unknown06433b1bAddress)
                                              call unknown06433b1bAddress.0x74d32ad4 with:
                                                   gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              else:
                                                  require return_data.size >= 32
                                                  if addr(ext_call.return_data[0]) != mem[[94m_14 + (32 * [94midx) + 140 len 20]:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr([94m_5576), ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
                                                  else:
                                                      require ext_code.size(unknown06433b1bAddress)
                                                      call unknown06433b1bAddress.0xf4196b63 with:
                                                           gas gas_remaining wei
                                                          args QUOTE_ASSETAddress
                                                      if not ext_call.success:
                                                          revert with ext_call.return_data[0 len return_data.size]
                                                      else:
                                                          require return_data.size >= 32
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 196] = ext_call.return_data[0]
                                                          require ext_code.size(unknowne3b5ce76Address)
                                                          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
                                                               gas gas_remaining wei
                                                              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                                                          mem[ceil32(return_data.size) + (32 * [94m_19) + 128 len 64] = ext_call.return_data[0 len 64]
                                                          if not ext_call.success:
                                                              revert with ext_call.return_data[0 len return_data.size]
                                                          else:
                                                              require return_data.size >= 64
                                                              if not ext_call.return_data[0]:
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                  require [94midx < mem[[94m_14 + 96]
                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                  mem[32] = 8
                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                  [94midx = [94midx + 1
                                                                  continue 
                                                              else:
                                                                  if ext_call.return_data[0]:
                                                                      if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                          revert with 0, 'ds-math-sub-underflow'
                                                                      else:
                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                          else:
                                                                              require ext_call.return_data[0]
                                                                              if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
                                                                                  revert with 0, 'ds-math-add-overflow'
                                                                              else:
                                                                                  require ext_code.size(QUOTE_ASSETAddress)
                                                                                  call QUOTE_ASSETAddress.decimals() with:
                                                                                       gas gas_remaining wei
                                                                                  mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = ext_call.return_data[0]
                                                                                  if not ext_call.success:
                                                                                      revert with ext_call.return_data[0 len return_data.size]
                                                                                  else:
                                                                                      require return_data.size >= 32
                                                                                      if not 10^ext_call.return_data[0]:
                                                                                          if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                              require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                              require [94midx < mem[[94m_14 + 96]
                                                                                              mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                              mem[32] = 8
                                                                                              prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                              [94midx = [94midx + 1
                                                                                              continue 
                                                                                          else:
                                                                                              if not ext_call.return_data[0]:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                      else:
                                                                                          require 10^ext_call.return_data[0]
                                                                                          if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
                                                                                              revert with 0, 'ds-math-mul-overflow'
                                                                                          else:
                                                                                              if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                  require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                  require [94midx < mem[[94m_14 + 96]
                                                                                                  mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                  mem[32] = 8
                                                                                                  prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                  [94midx = [94midx + 1
                                                                                                  continue 
                                                                                              else:
                                                                                                  if not ext_call.return_data[0]:
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                      require [94midx < mem[[94m_14 + 96]
                                                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                      mem[32] = 8
                                                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                      [94midx = [94midx + 1
                                                                                                      continue 
                                                                                                  else:
                                                                                                      if 1000000000000000000 * 10^18 / ext_call.return_data[0]:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                                                      else:
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                                                          require [94midx < mem[ceil32(return_data.size) + 96]
                                                                                                          require [94midx < mem[[94m_14 + 96]
                                                                                                          mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                                                          mem[32] = 8
                                                                                                          prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                                                          [94midx = [94midx + 1
                                                                                                          continue 
                                                                  else:
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      mem[ceil32(return_data.size) + (32 * [94midx) + 128] = 0
                                                                      require [94midx < mem[ceil32(return_data.size) + 96]
                                                                      require [94midx < mem[[94m_14 + 96]
                                                                      mem[0] = mem[[94m_14 + (32 * [94midx) + 140 len 20]
                                                                      mem[32] = 8
                                                                      prices[mem[[94m_14 + (32 * [94midx) + 140 len 20]] = 0
                                                                      [94midx = [94midx + 1
                                                                      continue 
          lastUpdate = block.timestamp
          mem[ceil32(return_data.size) + (32 * [94m_19) + 128] = 64
          mem[ceil32(return_data.size) + (32 * [94m_19) + 192] = mem[[94m_14 + 96]
          [94m_5571 = mem[[94m_14 + 96]
          mem[ceil32(return_data.size) + (32 * [94m_19) + 224 len floor32(mem[[94m_14 + 96])] = mem[[94m_14 + 128 len floor32(mem[[94m_14 + 96])]
          mem[ceil32(return_data.size) + (32 * [94m_19) + 160] = (32 * [94m_5571) + 96
          mem[(32 * [94m_5571) + ceil32(return_data.size) + (32 * [94m_19) + 224] = mem[ceil32(return_data.size) + 96]
          mem[(32 * [94m_5571) + ceil32(return_data.size) + (32 * [94m_19) + 256 len floor32(mem[ceil32(return_data.size) + 96])] = mem[ceil32(return_data.size) + 128 len floor32(mem[ceil32(return_data.size) + 96])]
          log 0x7da05e6b: 64, (32 * _5571) + 96, mem[ceil32(return_data.size) + (32 * _19) + 192 len (32 * mem[ceil32(return_data.size) + 96]) + (32 * _5571) + 64]


# hash = 0xabbc6531
# getter = None
# const = None
# payable = False
def unknownabbc6531(addr _param1): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0x74d32ad4 with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if ext_call.return_data[12 len 20] != _param1:
      return _param1
  return 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee


# hash = 0xb00bdd98
# getter = None
# const = ['return', 18]
# payable = False
const unknownb00bdd98 = 18


# hash = 0xbef648db
# getter = None
# const = None
# payable = False
def unknownbef648db(uint256 _param1): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.owner() with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if ext_call.return_data[12 len 20] != caller:
      revert with 0, 'Only registry owner can set'
  unknowne210c519 = _param1


# hash = 0xbf7e214f
# getter = ['storage', 160, 0, 0]
# const = None
# payable = False
def authority(): # not payable
  return authorityAddress


# hash = 0xc0463711
# getter = ['storage', 256, 0, 7]
# const = None
# payable = False
def lastUpdate(): # not payable
  return lastUpdate


# hash = 0xcfba99dc
# getter = ['storage', 160, 0, 3]
# const = None
# payable = False
def getQuoteAsset(): # not payable
  return QUOTE_ASSETAddress


# hash = 0xcfed246b
# getter = ['storage', 256, 0, ['sha3', ['data', ['cd', 4], 8]]]
# const = None
# payable = False
def prices(address _param1): # not payable
  return prices[_param1]


# hash = 0xe0fe42be
# getter = None
# const = None
# payable = False
def existsPriceOnAssetPair(address _sellAsset, address _buyAsset): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
       gas gas_remaining wei
      args _sellAsset
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if lastUpdate + (48 * 24 * 3600) < lastUpdate:
      revert with 0, 'ds-math-add-overflow'
  if not prices[addr(_sellAsset)]:
      return bool(prices[addr(_sellAsset)])
  if not ext_call.return_data[0]:
      return bool(ext_call.return_data[0])
  if block.timestamp < lastUpdate + (48 * 24 * 3600):
      require ext_code.size(unknown06433b1bAddress)
      call unknown06433b1bAddress.assetIsRegistered(address ofAsset) with:
           gas gas_remaining wei
          args _buyAsset
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >= 32
      if lastUpdate + (48 * 24 * 3600) < lastUpdate:
          revert with 0, 'ds-math-add-overflow'
      if not prices[addr(_buyAsset)]:
          return bool(prices[addr(_buyAsset)])
      if not ext_call.return_data[0]:
          return bool(ext_call.return_data[0])
  return (block.timestamp < lastUpdate + (48 * 24 * 3600))


# hash = 0xe210c519
# getter = ['storage', 256, 0, 6]
# const = None
# payable = False
def unknowne210c519(): # not payable
  return unknowne210c519


# hash = 0xe3b5ce76
# getter = ['storage', 160, 0, 2]
# const = None
# payable = False
def unknowne3b5ce76(): # not payable
  return unknowne3b5ce76Address


# hash = 0xec10bff9
# getter = None
# const = None
# payable = False
def unknownec10bff9(addr _param1, addr _param2): # not payable
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0x74d32ad4 with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0x74d32ad4 with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0xf4196b63 with:
       gas gas_remaining wei
      args _param1
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknowne3b5ce76Address)
  if ext_call.return_data[12 len 20] != _param1:
      if ext_call.return_data[12 len 20] != _param2:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args addr(_param1), addr(_param2), ext_call.return_data[0]
      else:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args addr(_param1), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
  else:
      if ext_call.return_data[12 len 20] != _param2:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr(_param2), ext_call.return_data[0]
      else:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 64
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0x74d32ad4 with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0x74d32ad4 with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknown06433b1bAddress)
  call unknown06433b1bAddress.0xf4196b63 with:
       gas gas_remaining wei
      args _param2
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknowne3b5ce76Address)
  if ext_call.return_data[12 len 20] != _param2:
      if ext_call.return_data[12 len 20] != _param1:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args addr(_param2), addr(_param1), ext_call.return_data[0]
      else:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args addr(_param2), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
  else:
      if ext_call.return_data[12 len 20] != _param1:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, addr(_param1), ext_call.return_data[0]
      else:
          call unknowne3b5ce76Address.getExpectedRate(address srcToken, address destToken, uint256 srcTokenValue) with:
               gas gas_remaining wei
              args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 64
  if not ext_call.return_data[0]:
      return 0
  if not ext_call.return_data[0]:
      return 0
  if (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0] > 1000000000000000000 * 10^18 / ext_call.return_data[0]:
      revert with 0, 'ds-math-sub-underflow'
  if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / 10^18 != (1000000000000000000 * 10^18 / ext_call.return_data[0]) - ext_call.return_data[0]:
      revert with 0, 'ds-math-mul-overflow'
  require ext_call.return_data[0]
  if ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]) < ext_call.return_data[0]:
      revert with 0, 'ds-math-add-overflow'
  require ext_code.size(_param2)
  call _param2.decimals() with:
       gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  if not 10^ext_call.return_data[0]:
      if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
          return (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] <= unknowne210c519, 
                 0
      if not ext_call.return_data[0]:
          return bool(ext_call.return_data[0]), 0
      return bool(1000000000000000000 * 10^18 / ext_call.return_data[0]), 0
  require 10^ext_call.return_data[0]
  if (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 10^ext_call.return_data[0] != ext_call.return_data[0] + (1000000000000000000 * 10^18 / ext_call.return_data[0]):
      revert with 0, 'ds-math-mul-overflow'
  if (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > unknowne210c519:
      return (10^18 * 1000000000000000000 * 10^18 / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0]) / ext_call.return_data[0] <= unknowne210c519, 
             (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
  if not ext_call.return_data[0]:
      return bool(ext_call.return_data[0]), 
             (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18
  return bool(1000000000000000000 * 10^18 / ext_call.return_data[0]), 
         (ext_call.return_data[0] * 10^ext_call.return_data[0]) + (1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^ext_call.return_data[0]) / 2 * 10^18


# hash = 0xf06a1e13
# getter = ['storage', 160, 0, 3]
# const = None
# payable = False
def QUOTE_ASSET(): # not payable
  return QUOTE_ASSETAddress


# hash = _fallback()
# getter = None
# const = None
# payable = True
def _fallback() payable: # default function
  revert


